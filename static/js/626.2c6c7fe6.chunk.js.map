{"version":3,"file":"static/js/626.2c6c7fe6.chunk.js","mappings":"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","sources":["components/FeedWrapper/FeedWrapper.style.ts","components/FeedWrapper/FeedWrapper.tsx","components/UsersWrapper/UserWrapper.style.ts","components/UsersWrapper/UsersWrapper.tsx","pages/ListFeedPage.style.ts","pages/ListFeedPage.tsx","hooks/useFetchFeedPosts.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.main`\r\n  margin-top: 80px;\r\n  height: 100%;\r\n  width:45%;\r\n  min-width: 600px;\r\n\r\n    @media (max-width: 600px) {\r\n    min-width: 100%;\r\n    width: 100%;\r\n    padding: 0px 10px;\r\n    }\r\n\r\n  .movieContainer{\r\n    margin-top: 10px;\r\n    padding: 10px;\r\n  }\r\n  .heading {\r\n    font-size: 1.5em;\r\n    font-weight: 400;\r\n    padding: 30px 0;\r\n    display: flex;\r\n  }\r\n\r\n  .feeds {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n    min-height: 90vh;\r\n  }\r\n\r\n  .no_feeds {\r\n    text-align: center;\r\n    margin-top: 70px;\r\n    font-weight: 400;\r\n    font-size: 1.2em;\r\n    height: 90vh;\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n  }\r\n`;","import React, {FC, useRef, memo} from 'react'\r\nimport { Wrapper } from './FeedWrapper.style'\r\nimport Feed from '../Feed/Feed'\r\nimport { useVirtualizer } from '@tanstack/react-virtual';\r\n\r\n\r\ninterface FeedWrapperProps{\r\ndata: any;\r\nisFeedsLoading: boolean;\r\n}\r\n\r\nconst FeedWrapper:FC<FeedWrapperProps> = ({data, isFeedsLoading}) => {\r\n  const parentRef = useRef(null);\r\n\r\n    const virtualizer = useVirtualizer({\r\n    count: data?.length,\r\n    getScrollElement: () => parentRef.current,\r\n    estimateSize: () => 35, // Estimate item height\r\n    overscan: 5,\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      {data?.length ? (\r\n        <div>\r\n      <div className='feeds' ref={parentRef}>\r\n        {virtualizer?.getVirtualItems()?.map((feed: any) => (\r\n            <Feed\r\n              feedData={data[feed?.index]}\r\n              key={data[feed?.index]?.id}\r\n            />\r\n        ))}\r\n            </div>\r\n        </div>\r\n      ) : isFeedsLoading ? (\r\n        <h1 className='no_feeds'>Fetching Posts!</h1>\r\n      ): (\r\n        <h1 className='no_feeds'>There are no feeds!</h1>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default memo(FeedWrapper);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.main`\r\n  top: 80px;\r\n  width:20%;\r\n  position: sticky;\r\n  max-width: 300px;\r\n  height: calc(100vh - 100px);\r\n  overflow: auto;\r\n  background: var(--feed-color);\r\n  border-radius: 30px;\r\n  padding: 20px;\r\n\r\n  @media (max-width: 900px) {\r\n    display: none;\r\n    }\r\n\r\n    .userWrapper{\r\n     display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    gap: 15px;\r\n    align-items: start;\r\n    }\r\n    .user{\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 10px;\r\n    }\r\n    .no_users{\r\n      height: 100%;\r\n      display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    }\r\n\r\n`;","import {FC, memo} from 'react'\r\nimport { Wrapper } from './UserWrapper.style';\r\nimport Avatar from '../Avatar/Avatar';\r\n\r\ninterface UsersWrapperProps{\r\nusers: any;\r\n}\r\n\r\nconst UsersWrapper:FC<UsersWrapperProps> = ({users}) => {\r\n  return (\r\n    <Wrapper>\r\n      {users?.length ? (\r\n        <div>\r\n      <div className='userWrapper'>\r\n        {users?.map((user: any) => (\r\n          <div className='user' key={user?.id}>\r\n            <Avatar\r\n              imgSrc={user?.profilePictureUrl}\r\n              userName={user?.name}\r\n            />\r\n            <h3>{user?.name}</h3>\r\n         </div>\r\n        ))}\r\n            </div>\r\n        </div>\r\n      ): (\r\n        <h3 className='no_users'>There are no Users!</h3>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default memo(UsersWrapper);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.main`\r\n  height: 100%;\r\n  width:100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 30px;\r\n\r\n  .detailWrapper {\r\n    display: flex;\r\n  justify-content: center;\r\n  gap: 30px;\r\n    margin-top: 80px;\r\n  width:45%;\r\n  min-width: 600px;\r\n  height: 90vh;\r\n\r\n  @media (max-width: 600px) {\r\n    min-width: 100%;\r\n    width: 100%;\r\n    padding: 0px 10px;\r\n    }\r\n  }\r\n  `;","import React, {useEffect, memo} from 'react';\r\nimport PageContainer from '../components/PageContainer/PageContainer';\r\nimport Navbar from '../components/Navbar/Navbar';\r\nimport FeedWrapper from '../components/FeedWrapper/FeedWrapper';\r\nimport { useFetchFeedPost } from '../hooks/useFetchFeedPosts';\r\nimport UsersWrapper from '../components/UsersWrapper/UsersWrapper';\r\nimport { Wrapper } from './ListFeedPage.style';\r\nimport { useSelector, useDispatch } from '../store';\r\nimport feedRedux from '../store/modules/feed';\r\n\r\nconst ListFeedPage = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const rootState = useSelector((state) => state);\r\n  const scrollPosition = feedRedux.getters.scrollPosition(rootState);\r\n  \r\n  const {data, setSearchQuery, setIncludedPages, setPage, isFeedsLoading, users} = useFetchFeedPost();\r\n\r\n    useEffect(() => {\r\n    if (scrollPosition) {\r\n          const element = document.getElementById(scrollPosition);\r\n    if (element) {\r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n    }\r\n    }, [scrollPosition, dispatch])\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Navbar setSearchQuery={setSearchQuery} setPage={setPage} setIncludedPages={setIncludedPages} />\r\n      <Wrapper>\r\n      <FeedWrapper data={data} isFeedsLoading={isFeedsLoading} />\r\n      <UsersWrapper users={users}/>\r\n      </Wrapper>\r\n    </PageContainer>\r\n  )\r\n}\r\n\r\nexport default memo(ListFeedPage);\r\n","import {useState, useEffect, useCallback, useRef} from 'react'\r\nimport { useDispatch, useSelector } from '../store';\r\nimport feedRedux from '../store/modules/feed';\r\n\r\nexport const useFetchFeedPost = () => {\r\n\r\n  // State for storing the list of items\r\n  // State for search and filter query params\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\r\n\r\n  const initialFeed = useRef(true);\r\n  const initialUsers = useRef(true);\r\n\r\n  const dispatch = useDispatch();\r\n  const rootState = useSelector((state) => state);\r\n\r\n  const feeds = feedRedux.getters.feeds(rootState);\r\n  const users = feedRedux.getters.users(rootState);\r\n  const isFeedsLoading = feedRedux.getters.isfeedsLoading(rootState);\r\n  const feedData = feedRedux.getters.feedData(rootState);\r\n  const feedCurrentPage = feedRedux.getters.feedCurrentPage(rootState);\r\n  const feedIncludedPages = feedRedux.getters.feedIncludedPages(rootState);\r\n\r\n  const LIMIT = 10;\r\n\r\n  const fetchData = useCallback(async () => {\r\n    try{\r\n    setIsLoading(true);\r\n    const response: any = await dispatch(feedRedux.actions.feeds({ limit: LIMIT, query: searchQuery, page: feedCurrentPage }));\r\n    // Update the data state with the fetched data\r\n    if (response) {\r\n    let feedPosts: any = [...feedData];\r\n    if (searchQuery) {\r\n      feedPosts= [...response?.data];\r\n    } else {\r\n       const includedPages = {...feedIncludedPages};\r\n        if (!includedPages.hasOwnProperty(response?.data?.pagination?.page)) {\r\n        feedPosts =  [...feedData, ...response?.data?.data];  \r\n        includedPages[response?.data?.pagination?.page] = true;\r\n        console.log(includedPages);\r\n        dispatch(feedRedux.actions.setFeedIncludedPages(includedPages));\r\n        }\r\n    }\r\n     dispatch(feedRedux.actions.setFeedData(feedPosts));\r\n     sessionStorage.setItem(\"data\", JSON.stringify(feedData));\r\n     sessionStorage.setItem(\"page\", JSON.stringify(feedCurrentPage));\r\n     sessionStorage.setItem(\"includedPages\", JSON.stringify(feedIncludedPages));\r\n    }\r\n      } catch(err) {\r\n      console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [feedData, searchQuery, feedCurrentPage, feedIncludedPages]);\r\n\r\n  const fetchUsers = useCallback(async() => {\r\n  try {\r\n  await dispatch(feedRedux.actions.users())\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (initialFeed.current) {\r\n      initialFeed.current = false;\r\n      return\r\n    }\r\n    fetchData();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[feedCurrentPage, searchQuery])\r\n\r\n  useEffect(() => {\r\n    if (initialUsers.current) {\r\n      initialUsers.current = false;\r\n      return\r\n    }\r\n   fetchUsers()\r\n  },[fetchUsers])\r\n\r\n    useEffect(() => {\r\n    const handleOnline = () => setIsOnline(true);\r\n    const handleOffline = () => setIsOnline(false);\r\n\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n\r\n    useEffect(() => {\r\n    if (!isOnline && !initialFeed.current) {\r\n      const storageData = JSON.parse(sessionStorage.getItem('data') as any);\r\n      const storagePage = JSON.parse(sessionStorage.getItem('page'as string) as any);\r\n      const storageIncludedPages = JSON.parse(sessionStorage.getItem('includedPages'as string) as any);\r\n     dispatch(feedRedux.actions.setFeedData(storageData));\r\n     dispatch(feedRedux.actions.setFeedCurrentPage(storagePage));\r\n      dispatch(feedRedux.actions.setFeedIncludedPages(storageIncludedPages));\r\n    }\r\n  },[isOnline, dispatch])\r\n\r\n  // Implement the infinite scroll event handler\r\n  const handleScroll = useCallback(() => {\r\n    const scrollPosition = window.innerHeight + window.scrollY;\r\n    const documentHeight = document.body.scrollHeight;\r\n\r\n    // Check if the user has scrolled to the bottom of the page\r\n    if (scrollPosition >= documentHeight - 100 && feeds?.data?.pagination?.hasMore && !isFeedsLoading && !isLoading) {\r\n     dispatch(feedRedux.actions.setFeedCurrentPage(feedCurrentPage + 1));\r\n    }\r\n\r\n  }, [feeds, isFeedsLoading, isLoading, feedCurrentPage, dispatch]);\r\n\r\n  // Attach the scroll event listener\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    // Remove the event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [handleScroll]);\r\n\r\n  const setIncludedPages = useCallback((val: any) => {\r\n    dispatch(feedRedux.actions.setFeedIncludedPages(val));\r\n  }, [dispatch])\r\n\r\n    const setPage = useCallback((val: any) => {\r\n    dispatch(feedRedux.actions.setFeedCurrentPage(val));\r\n  }, [dispatch])\r\n\r\n  return {\r\n    data : feedData, setSearchQuery, setIncludedPages, searchQuery, setPage, isFeedsLoading, users\r\n  }\r\n}\r\n"],"names":["Wrapper","styled","main","_templateObject","_taggedTemplateLiteral","FeedWrapper","_ref","_virtualizer$getVirtu","data","isFeedsLoading","parentRef","useRef","virtualizer","useVirtualizer","count","length","getScrollElement","current","estimateSize","overscan","_jsx","children","className","ref","getVirtualItems","map","feed","_data$feed$index","Feed","feedData","index","id","memo","UsersWrapper","users","user","_jsxs","Avatar","imgSrc","profilePictureUrl","userName","name","ListFeedPage","dispatch","useDispatch","rootState","useSelector","state","scrollPosition","feedRedux","getters","setSearchQuery","setIncludedPages","setPage","useFetchFeedPost","searchQuery","useState","isLoading","setIsLoading","isOnline","setIsOnline","navigator","onLine","initialFeed","initialUsers","feeds","isfeedsLoading","feedCurrentPage","feedIncludedPages","fetchData","useCallback","async","response","limit","query","page","feedPosts","_response$data","_response$data$pagina","includedPages","_response$data2","_response$data3","_response$data3$pagin","hasOwnProperty","pagination","console","log","setFeedIncludedPages","setFeedData","sessionStorage","setItem","JSON","stringify","err","error","fetchUsers","useEffect","handleOnline","handleOffline","window","addEventListener","removeEventListener","storageData","parse","getItem","storagePage","storageIncludedPages","setFeedCurrentPage","handleScroll","_feeds$data","_feeds$data$paginatio","innerHeight","scrollY","document","body","scrollHeight","hasMore","val","element","getElementById","scrollIntoView","behavior","PageContainer","Navbar"],"sourceRoot":""}